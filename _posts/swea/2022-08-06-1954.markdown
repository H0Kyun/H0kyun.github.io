---
layout: post
title: 1954
subtitle: 달팽이 숫자
categories: [SWEA]
use_math: true
---

[문제 링크](https://swexpertacademy.com/main/code/problem/problemDetail.do?contestProbId=AV5PobmqAPoDFAUq)

<h2 class="section-heading">풀이</h2>
1. 숫자가 채워질 경로(우, 하, 좌, 상)를 생각해 좌표에 더해질 값을 배열로 만들어준다.
2. 루프는 숫자를 다 채울 때까지 반복한다.
3. 숫자가 채워질 방향은 조건문으로 정해준다. 아래 두 가지 경우에 경로 배열의 인덱스를 증가해 방향을 바꿔준다.<br>
	3-1) 배열 범위를 벗어났을 때<br>
	3-2). 숫자를 채울 칸에 이미 값이 있을 때<br>
4. 방향이 변경되면 변경된 방향을 현재 좌표에 더해 이동할 좌표를 다시 구한다.
5. 현재 좌푯값에 이동할 좌표를 대입하고 이동할 좌표에 해당하는 배열 값을 숫자로 변경해준다.
6. 위를 반복한다. 


<h2 class="section-heading">코드</h2>
C++  
<pre><code class="cpp">#include&lt;iostream&gt;
#include&lt;vector&gt;

using namespace std;

int main(int argc, char** argv)
{
	int test_case;
	int T;
	
	cin>>T;
    
    int dir_row[] = {0, 1, 0, -1};
    int dir_column[] = {1, 0, -1, 0};
    
	for(test_case = 1; test_case <= T; ++test_case)
	{
		int number;
        
        cin >> number;
        
        vector&lt;vector&lt;int&gt;&gt; snail(number, vector&lt;int&gt;(number, 0));
         snail[0][0] = 1;
        
        int row = 0, column = 0, idx = 0;
        
        for(int i = 2; i <= number * number; i++)
        {
            int snail_row = row + dir_row[idx];
            int snail_column = column + dir_column[idx];
            
            if(snail_row >= number || snail_column >= number || snail_row < 0 || snail_column < 0 || snail[snail_row][snail_column] > 0)
            {
				idx++;
                if(idx == 4)
                    idx = 0;
                i--;
                continue;
            }
                
            snail[snail_row][snail_column] = i;
            
            row = snail_row;
            column = snail_column;       
        }
        
        cout << "#" << test_case << endl;
        for(int i = 0; i < number; i++)
        {
            for(int j =0; j < number; j++)
            	cout << snail[i][j] << " ";

        	cout << endl;
        }
	}
	return 0;
}</code></pre>


JAVA
<pre><code class="java">import java.io.BufferedReader;
import java.io.InputStreamReader;

public class SWEA1954 {

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int T = Integer.parseInt(br.readLine());
		
		for(int testCase = 1; testCase <= T; testCase++) {
			int base = Integer.parseInt(br.readLine());
			int[][] snail = new int[base][base];
			
			int[] dRow = {0, 1, 0, -1};
			int[] dCol = {1, 0, -1, 0};
			int currentSnailRow = 0, currentSnailCol = 0;
			snail[0][0] = 1;
			for(int i = 2, j = 0; i <= base * base; i++) {
				int row =currentSnailRow + dRow[j], col = currentSnailCol + dCol[j];
				
				if(row < 0 || row >= base || col < 0 || col >= base || snail[row][col] != 0) {
					j++;
					if(j == 4) j = 0;
					row = currentSnailRow + dRow[j]; col = currentSnailCol + dCol[j];
				}
				currentSnailRow = row;
				currentSnailCol = col;
				snail[row][col] = i;
			}
			
			System.out.println("#" + testCase);
			for(int i = 0; i < base; i++) {
				for(int j = 0; j < base; j++) {
					System.out.print(snail[i][j] + " ");
				}
				System.out.println();
			}
		}
	}
}</code></pre>