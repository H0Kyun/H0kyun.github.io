---
layout: post
title: C++ 구조
subtitle: 알고있으면 공부할 때 도움되는 C++ 구조 
categories: [Cpp]
---
<h2 class="section-heading">C++ 구조</h2>
C++를 단일 언어가 아닌 상관관계가 있는 여러 언어의 연합체(federation)로 보고 나서 각 언어에 관한 규칙을 이해하면 더 쉽게 이해할 수 있다.


C++에서 제공하는 네 가지 하위언어(sublanguage)
- C&nbsp;:&nbsp;&nbsp;&nbsp;C++는 C를 기본으로 하고 있고 C++만의 것들을 제외하고 C만 뽑아 사용해도 된다.

- 객체 지향 개념의 C++&nbsp;:&nbsp;&nbsp;&nbsp;'클래스를 쓰는 C'에 관한 것이 모두 해당하고 객체 지향 설계의 규칙들 대부분이 그대로 들어맞는다고 보면 된다.

- 템플릿 C++&nbsp;:&nbsp;&nbsp;&nbsp;템플릿이 C++에 끼치는 영향이 강해 템플릿 메타프로그래밍(template metaprogramming: TMP)이라는 완전히 새로운 프로그래밍 패러다임이 파생되기까지 했다.

- STL&nbsp;:&nbsp;&nbsp;&nbsp;특별한 템플릿 라이브러리이다. STL은 독특한 사용규약이 있어 그 규약을 따라 프로그래밍하면 된다.

C++는 하위 언어의 연합체이기에 C++를 사용한 효과적인 프로그래밍 규칙은 C++의 어떤 부분을 사용하느냐에 따라 달라진다.

<br>
>###### 자료 출처  
>###### Effective C++ - 스콧 마이어슨