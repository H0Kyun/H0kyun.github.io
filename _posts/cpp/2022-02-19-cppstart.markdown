---
layout: post
title: C++ 시작하기
subtitle: C++ 공부를 시작할 때 도움되는 내용들
categories: [Cpp]
---

C++을 처음 시작할 때 도움이 되는 근본적인 내용을 정리해두었습니다.
<h2 class="section-heading">C++를 언어들의 연합체로 바라보기</h2>
C++를 이해하기 쉬운 방법으로 C++를 단일 언어가 아닌 상관관계가 있는 여러 언어의 연합체(federation)로 보고 나서 각 언어에 관한 규칙을 이해하는 방법이 있습니다.


C++는 네 가지 하위언어(sublanguage)를 제공하고 있습니다.
- C&nbsp;:&nbsp;&nbsp;&nbsp;C++는 C를 기본으로 하고 있고 C++만의 것들을 제외하고 C만 뽑아 사용해도 됩니다.

- 객체 지향 개념의 C++&nbsp;:&nbsp;&nbsp;&nbsp;'클래스를 쓰는 C'에 관한 것이 모두 해당합니다. 객체 지향 설계의 규칙들 대부분이 그대로 들어맞는다고 보면 됩니다.

- 템플릿 C++&nbsp;:&nbsp;&nbsp;&nbsp;템플릿이 C++에 끼치는 영향이 강해 괜찮다고 하는 프로그래밍 규칙에서는 템플릿 구문 하나쯤은 흔히 볼 수 있는 것을 넘어서 템플릿 메타프로그래밍(template metaprogramming: TMP)이라는 완전히 새로운 프로그래밍 패러다임이 파생되기까지 했습니다.

- STL&nbsp;:&nbsp;&nbsp;&nbsp;특별한 템플릿 라이브러리입니다. STL은 컨테이너(container), 반복자(iterator), 알고리즘(algorithm)과 함수 객체(function object)가 얽혀 돌아가는 것을 규약으로 삼고 있으나 템플릿과 라이브러리는 다른 아이디어를 중심으로 만들어질 수 있습니다. 또 STL은 독특한 사용규약이 있어 그 규약을 따라 프로그래밍하면 됩니다.

C++는 하위 언어의 연합체이기에 C++를 사용한 효과적인 프로그래밍 규칙은 C++의 어떤 부분을 사용하느냐에 따라 달라집니다.