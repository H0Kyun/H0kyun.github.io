---
layout: post
title: 매크로
subtitle: 매크로에 대해 알아보자
categories: [Cpp]
---
매크로(macro)는 특정한 입력이 어떤 출력으로 매핑되어야 하는지를 정의하는 규칙이나 패턴을 말한다. C와 C++에서는 <code>#define</code>지시자를 사용해서 매크로를 정의한다.

<h2 class="section-heading">매크로 상수</h2>
<code>#define</code>지시자를 사용해서 정의한 상수를 매크로 상수라고 한다.
<script src="https://gist.github.com/H0Kyun/d51c4a0f6a616cb5e7247c51e614409a.js"></script>

<h2 class="section-heading">매크로 함수</h2>
매크로 함수는 <code>#define</code>지시자를 사용해 함수를 정의하여 함수처럼 사용 가능한 매크로를 말한다. 함수처럼 사용하지만, 함수는 아니다.
<script src="https://gist.github.com/H0Kyun/b8ac490bc171622ed9323bb58c003035.js"></script>

매크로 함수 사용 시 매크로 본문의 모든 인자를 괄호 처리 해줘야 한다. 그렇지 않으면 아래 예와 같은 문제가 발생할 수 있다.
<script src="https://gist.github.com/H0Kyun/bf4125f48a0a38de7f27a18edece76c6.js"></script>

<h2 class="section-heading">#연산자와 ##연산자</h2>
<code>#define</code>지시문에서만 사용되는 연산자로 #연산자는 인자를 문자열로 변경해주고 ##연산자는 인자를 붙여준다.
<script src="https://gist.github.com/H0Kyun/28a988397a6bb5895b8a6f6cdb57a961.js"></script>

<h2 class="section-heading">#define을 사용한 매크로의 단점</h2>
상수에 <code>#define</code>을 사용하면 선행처리자가 기호식을 밀고 상수로 변경하여 에러 발생 시 에러 메시지에 상수만 표기되어 에러 해결이 힘들다.

<code>#define</code> 대신 <code>const</code>를 사용하면 언어 차원에서 지원하는 상수이기에 컴파일 에러도 기호식으로 나오게 된다.
<script src="https://gist.github.com/H0Kyun/1adef11a9a47e2c75f113eeedf3e8b38.js"></script>  

매크로 함수도 문제가 생긴다. 아래 예는 괄호 처리도 잘 해줬지만 <code>a</code>값의 증가량이 달라진다.
<script src="https://gist.github.com/H0Kyun/34fd7257d070bf34bfc3e8bb78c18af0.js"></script>

이런 문제를 피하면서 기존 매크로의 효율을 그대로 유지하는 방법으로 인라인 함수 템플릿을 준비하는 것이 있다.
<script src="https://gist.github.com/H0Kyun/55c422eff1ffdafb9567a382ed7a0bb2.js"></script>

인라인 함수 템플릿은 아래의 장점들을 가진다.
1. 함수는 템플릿이기에 동일 계열 함수군(family of unctions)을 만들어 낸다.
1. 함수 본문에 괄호를 남발할 필요가 없다.
1. 인자를 여러 번 평가할지 모른다는 걱정이 없다.

<br>
>###### 참고 자료
>###### [위키백과](https://ko.wikipedia.org/wiki/%EB%A7%A4%ED%81%AC%EB%A1%9C_(%EC%BB%B4%ED%93%A8%ED%84%B0_%EA%B3%BC%ED%95%99))
>###### [TCP School](http://www.tcpschool.com/c/c_prepro_macroFunc)
>###### Effective C++ - 스콧 마이어슨