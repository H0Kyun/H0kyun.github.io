---
layout: post
title: 11866
subtitle: 요세푸스 문제
categories: [BOJ]
use_math: true
---

[문제 링크](https://www.acmicpc.net/problem/11866){: target="_blank"}

<h2 class="section-heading">풀이</h2>
1. 큐에 숫자를 담는다
2. 찾아야 하는 인덱스 $-1$만큼 큐를 돌려준다.
3. 큐의 <code>front</code>를 출력하고 빼준다.
4. 길이가 $1$보다 클 때까지 $1$~$3$번을 반복한다.
5. 길이가 $1$이 되면 큐의 <code>front</code>를 출력한다.
<h2 class="section-heading">코드</h2>
C++
<pre><code class="cpp">#include&lt;iostream>
#include&lt;queue>

using namespace std;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	int length, index;
	cin >> length >> index;
	
    queue&lt;int> q;
	for (int i = 1; i <= length; i++)
		q.push(i);

	cout << '<';
	while (q.size() > 1)
	{
		for(int i = 0; i < index - 1; i++)
        {
            q.push(q.front());
            q.pop();
        }
        cout << q.front() << ", ";
        q.pop();
	}

	cout << q.front() << '>';

	return 0;
}</code></pre>
JAVA
<pre><code class="java">import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		int length = Integer.parseInt(st.nextToken());
		int index = Integer.parseInt(st.nextToken());
		
		Queue&lt;Integer> queue = new ArrayDeque<>();
		for(int i = 1; i <= length; i++) {
			queue.add(i);
		}
		
		sb.append('<');
		while(queue.size() > 1) {
			for(int i = 0; i < index - 1; i++) {
				queue.add(queue.poll());
			}
			
			sb.append(queue.poll() + ", ");
		}
		
		sb.append(queue.poll());
		sb.append('>');
		System.out.println(sb);
	}
}</code></pre>