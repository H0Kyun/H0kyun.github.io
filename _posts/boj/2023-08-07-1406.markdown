---
layout: post
title: 에디터 - 1406
subtitle: 실버 2/에디터
categories: [BOJ]
use_math: true
---

## 📑문제링크

[문제 링크](https://www.acmicpc.net/problem/1406)

## ⏳회고

입력과 출력 속도에 문제 시간 초과 여부가 달린 아주 더러운 문제이다.

문제 풀이는 단순하다. 커서의 왼쪽에 있는 문자들을 cursorLeft에 저장하고 커서의 오른쪽에 있는 문자들을 cursorRight에 저장하여 커서의 움직임을 해당 덱들에 문자가 들어가는 식으로 표현한다.

## 💻코드

```java
import java.util.*;
import java.io.*;

public class Main {

    public static void main(String args[]) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        String initStr = br.readLine();
        Deque<Character> cursorLeft = new ArrayDeque<>();
        Deque<Character> cursorRight = new ArrayDeque<>();
        int commandCount = Integer.parseInt(br.readLine());

        for(int i = 0; i < initStr.length(); ++i) {
            cursorLeft.add(initStr.charAt(i));
        }

        for (int i = 0; i < commandCount; ++i) {
            String command = br.readLine();

            switch(command.charAt(0)) {
                case 'L':
                    if(cursorLeft.isEmpty()) {
                        break;
                    }
                    cursorRight.addFirst(cursorLeft.removeLast());
                    break;
                case 'D':
                    if(cursorRight.isEmpty()) {
                        break;
                    }
                    cursorLeft.addLast(cursorRight.removeFirst());
                    break;
                case 'B':
                    if(cursorLeft.isEmpty()) {
                        break;
                    }
                    cursorLeft.removeLast();
                    break;
                case 'P':
                    cursorLeft.addLast(command.charAt(2));
                    break;
                default:
                    break;
            }
        }

        while(!cursorLeft.isEmpty()) {
            bw.write(cursorLeft.pollFirst());
        }
        while(!cursorRight.isEmpty()) {
            bw.write(cursorRight.pollFirst());
        }

        br.close();
        bw.flush();
        bw.close();
    }

}
```