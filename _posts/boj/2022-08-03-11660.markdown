---
layout: post
title: 11660
subtitle: 구간합 구하기5
categories: [BOJ]
use_math: true
---

[문제 링크](https://www.acmicpc.net/problem/11660)

<h2 class="section-heading">풀이</h2>
구간 합 배열을 이용해서 푼다. 구간 합 배열에 대한 자세한 설명은 아래 블로그에서 친절하고 자세하게 설명해준다.
[https://chanhuiseok.github.io/posts/baek-19/](https://chanhuiseok.github.io/posts/baek-19/)

1. 배열의 크기를 입력 크기와 맞게 만들면 숫자를 모두 입력받은 후에 구간 합 배열을 다시 만들어야 해서 일부러 구간 합 배열을 하나 크게 만들어 과정을 단축했다.
2. 위 블로그 설명을 읽어보면 알겠지만 입력된 구간을 구하기 위해서는 $(1, 1)$ ~ $(x2, y2)$의 합에서 $(1, 1)$ ~ $(x2, y1 - 1)$, $(1, 1)$ ~ $(x1 - 1, y2)$를 빼주고 두 구간을 빼는 동안 2번 뺀 $(1, 1)$ ~ $(x1 - 1, y1 - 1)$ 구간을 합해주면 된다.
<h2 class="section-heading">코드</h2>
C++  
코드 준비중...

JAVA
<pre><code class="java">import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		
		int boardSize = Integer.parseInt(st.nextToken());
		int count = Integer.parseInt(st.nextToken());
		long[][] sum = new long[boardSize + 1][boardSize + 1];
		for(int i = 0; i < boardSize; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			for(int j = 0; j < boardSize; j++) {
				sum[i + 1][j + 1] = sum[i][j + 1] + sum[i + 1][j] - sum[i][j] + Long.parseLong(st.nextToken());
			}
		}
		
		for(int i = 0; i < count; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			int x1 = Integer.parseInt(st.nextToken());
			int y1 = Integer.parseInt(st.nextToken());
			int x2 = Integer.parseInt(st.nextToken());
			int y2 = Integer.parseInt(st.nextToken());
			
			long result = sum[x2][y2] - sum[x2][y1 - 1] - sum[x1 - 1][y2] + sum[x1 - 1][y1 - 1];
			sb.append(result).append('\n');
		}
		
		System.out.println(sb);
		

	}

}</code></pre>